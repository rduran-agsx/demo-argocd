name: Hiraya Backend CI
on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
  workflow_dispatch:

jobs:
  backend-ci:
    runs-on: ubuntu-latest
    
    env:
      DOCKER_IMAGE: amihanglobal/hiraya-backend
      MANIFEST_PATH: k8s-manifests/backend
      API_URL: https://hiraya.amihan.net/api
      AWS_REGION: ap-southeast-1
      SKIP_DB_MIGRATION: "true"
      S3_PROVIDERS_URI: s3://hiraya-app-providers/providers.tar.gz

    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}    

      - name: Create pip cache directory
        run: |
          mkdir -p /home/runner/.cache/pip

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'backend/requirements.txt'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile.backend
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ github.run_number }},${{ env.DOCKER_IMAGE }}:latest
          build-args: |
            FLASK_ENV=production
            API_URL=${{ env.API_URL }}
            SKIP_DB_MIGRATION=true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update Kubernetes deployment
        run: |
          cd ${{ env.MANIFEST_PATH }}
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          sed -i "s|${{ env.DOCKER_IMAGE }}:[0-9]*|${{ env.DOCKER_IMAGE }}:${{ github.run_number }}|" deployment.yaml
          
          if git diff --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          git add deployment.yaml
          git commit -m "Update backend image to version ${{ github.run_number }}"

      - name: Pull latest changes from remote
        run: |
          git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git pull origin main --rebase

      - name: Push changes if there are any
        if: success()
        run: |
          git push origin main || echo "No changes to push"

      - name: Verify image pushed to DockerHub
        run: |
          sleep 10
          docker pull ${{ env.DOCKER_IMAGE }}:${{ github.run_number }}
          
          if [ $? -eq 0 ]; then
            echo "✅ Image successfully pushed and verified on DockerHub"
          else
            echo "❌ Failed to verify image on DockerHub"
            exit 1
          fi

      - name: Workflow summary
        run: |
          echo "### Deployment Summary 🚀" >> $GITHUB_STEP_SUMMARY
          echo "- Image: \`${{ env.DOCKER_IMAGE }}:${{ github.run_number }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Manifest updated: \`${{ env.MANIFEST_PATH }}/deployment.yaml\`" >> $GITHUB_STEP_SUMMARY
          echo "- Build Number: \`${{ github.run_number }}\`" >> $GITHUB_STEP_SUMMARY