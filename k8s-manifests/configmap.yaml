# configmap.yaml

# Frontend ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: hiraya-frontend-config
  namespace: cet-rduran
data:
  default.conf: |
    server {
      listen 80;
      server_name _;

      # Include MIME types
      include /etc/nginx/mime.types;
      root /usr/share/nginx/html;
      index index.html;

      # Serve static files with proper MIME types
      location /static/ {
        try_files $uri $uri/ =404;
        expires 1y;
        access_log off;
        add_header Cache-Control "public";
      }

      # Handle React routes
      location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
      }

      # Health endpoint
      location /health {
        access_log off;
        return 200 "healthy\n";
      }

      # API proxy
      location /api/ {
        proxy_pass http://hiraya-backend:5000/;
        proxy_http_version 1.1;
        proxy_set_header Authorization $http_authorization;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }

      # Enable gzip
      gzip on;
      gzip_vary on;
      gzip_proxied any;
      gzip_comp_level 6;
      gzip_types text/plain text/css text/xml application/javascript application/json;
    }
---
# Backend Config
apiVersion: v1
kind: ConfigMap
metadata:
  name: hiraya-backend-config
  namespace: cet-rduran
  labels:
    app: hiraya-backend
data:
  FLASK_APP: app.py
  FLASK_ENV: production
  CORS_ORIGINS: "https://hiraya.amihan.net"
  FRONTEND_URL: "https://hiraya.amihan.net"
  API_URL: "https://hiraya.amihan.net/api"
  GUNICORN_WORKERS: "4"
  GUNICORN_THREADS: "4"
  GUNICORN_TIMEOUT: "300"
  GUNICORN_KEEPALIVE: "5"
---
# Postgres Config
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: cet-rduran
data:
  postgresql.conf: |
    max_connections = 200
    shared_buffers = 512MB
    work_mem = 32MB
    maintenance_work_mem = 128MB
    effective_cache_size = 1GB
    random_page_cost = 1.1
    synchronous_commit = off
    max_wal_size = 1GB
    min_wal_size = 80MB
    wal_buffers = 16MB
    checkpoint_completion_target = 0.9
    default_statistics_target = 500
    effective_io_concurrency = 200
    max_worker_processes = 8
    max_parallel_workers_per_gather = 4
    max_parallel_workers = 8
    max_parallel_maintenance_workers = 4
---
# Postgres Init Scripts
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-initdb
  namespace: cet-rduran
data:
  init.sql: |
    -- Initial PostgreSQL System Configuration
    ALTER SYSTEM SET max_connections = '200';
    ALTER SYSTEM SET shared_buffers = '512MB';
    ALTER SYSTEM SET work_mem = '32MB';
    ALTER SYSTEM SET maintenance_work_mem = '128MB';
    ALTER SYSTEM SET effective_cache_size = '1GB';

    -- Create application user and database
    CREATE USER "hiraya-admin" WITH PASSWORD 'password' CREATEDB;
    ALTER USER "hiraya-admin" WITH SUPERUSER;
    CREATE DATABASE "hiraya-db" WITH OWNER = "hiraya-admin";
    GRANT ALL PRIVILEGES ON DATABASE "hiraya-db" TO "hiraya-admin";

    -- Connect to the application database
    \c hiraya-db

    -- Set up database extensions and permissions
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO "hiraya-admin";
    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO "hiraya-admin";